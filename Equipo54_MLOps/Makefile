.PHONY: help install data train predict clean all test

# Variables
PYTHON := python
DATA_RAW := data/raw/student_entry_performance_modified.csv
DATA_PROCESSED := data/processed/student_performance_clean.csv
MODEL_DIR := models/

help:
	@echo "üéì Student Performance MLOps Project"
	@echo ""
	@echo "Comandos disponibles:"
	@echo "  make install        - Instalar dependencias"
	@echo "  make data          - Procesar datos"
	@echo "  make train         - Entrenar modelo"
	@echo "  make train-fast    - Entrenar modelo sin optimizaci√≥n"
	@echo "  make predict       - Hacer predicci√≥n interactiva"
	@echo "  make all           - Pipeline completo (data + train)"
	@echo "  make clean         - Limpiar archivos generados"
	@echo "  make test          - Ejecutar tests (futuro)"
	@echo ""

install:
	@echo "üì¶ Instalando dependencias..."
	$(PYTHON) -m pip install --upgrade pip
	$(PYTHON) -m pip install -r requirements.txt
	@echo "‚úÖ Dependencias instaladas"

data:
	@echo "üîÑ Procesando datos..."
	$(PYTHON) src/data/make_dataset.py $(DATA_RAW) $(DATA_PROCESSED)
	@echo "‚úÖ Datos procesados"

train:
	@echo "üöÄ Entrenando modelo con optimizaci√≥n..."
	$(PYTHON) src/models/train_model.py $(DATA_PROCESSED) $(MODEL_DIR)
	@echo "‚úÖ Modelo entrenado"

train-fast:
	@echo "‚ö° Entrenando modelo SIN optimizaci√≥n (r√°pido)..."
	$(PYTHON) src/models/train_model.py $(DATA_PROCESSED) $(MODEL_DIR) --no-optimize
	@echo "‚úÖ Modelo entrenado"

predict:
	@echo "üîÆ Modo predicci√≥n interactiva..."
	$(PYTHON) src/models/predict_model.py $(MODEL_DIR) --interactive

predict-csv:
	@echo "üìä Hacer predicciones desde CSV..."
	@echo "Uso: make predict-csv INPUT=data/new_students.csv OUTPUT=predictions.csv"
	$(PYTHON) src/models/predict_model.py $(MODEL_DIR) $(INPUT) --output $(OUTPUT)

all: data train
	@echo "‚úÖ Pipeline completo ejecutado"

clean:
	@echo "üßπ Limpiando archivos generados..."
	rm -rf $(DATA_PROCESSED)
	rm -rf $(MODEL_DIR)*.pkl
	rm -rf $(MODEL_DIR)*.json
	rm -rf __pycache__
	rm -rf src/__pycache__
	rm -rf src/data/__pycache__
	rm -rf src/models/__pycache__
	@echo "‚úÖ Archivos limpiados"

test:
	@echo "üß™ Ejecutando tests..."
	@echo "‚ö†Ô∏è  Tests a√∫n no implementados"
	# pytest tests/

.DEFAULT_GOAL := help